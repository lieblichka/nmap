______________nmap______________
tracefile: http://www.stationx.net/nmap-cheat-sheet *pdf

PART 1:
- sort -r -k3 /usr/share/nmap/nmap-services | grep tcp | head -n 100
 # наиболее популярные порты
- nmap 192.168.100.1 
 # nmap (host) если выполнять эту команду не под привилегированным пользователем
то nmap не может высылать сырые tcp пакеты (syn only), а устанавливает 
полноценное соединение с хостом (syn -> |  syn+ack -<  |  ack ->)

PART 2:
Определение целей:
 - 1) Имена хостов microsoft.com/24
 - 2) Ip-адреса 192.168.0.1
 - 3) Сети 10.0.0-255.1-254 (диапазоны адресов)
 
nmap -sS 192.168.100.1-35 & nmap 192.168.100.1 -sS
 # цель можно указывать как после опции так и до нее

nmap -sS ip
 # default with root
nmap -sT ip
 # default without root privilege
nmap -iL  filename 
 # scan list of host from set file
nmap -iR 3 -vv  
 # scan three random ip adress -vv dual verbality
---------------------------------------------------
Состояния портов: 
 # Открытое состояние ( приложение принимает )
  - tcp соединение
  - udp датаграммы
  - sctp ассоциации 
  - каждый открытый порт это проход для атаки

 # Закрытое состояние
  - закрытый порт принимает и отвечает на запросы nmap 
  - приложения не слушают на закрытом порту
  - закрытый порт -> хост в рабочем состоянии
  - закрытый порт впоследствии может стать открытым

 # Фильтрующее состояние
  - nmap не может определить открыт ли порт
  - тестовые пакеты nmap не могут достичь порта 
  - firewall, routing rules, access control list acl etc...
  - иногда отвечают acmp откликом type 3 code 13

 # Нефильтруюшее состояние
  - nmap не может определить открыт ли порт или закрыт 
  - syn сканирование не подходит для такого порта

 # Открыто или фильтруюшее состояние 
  - пакетная фильтрация могла сбросить запрос
  - клиссифицируется через udp, ip, xmass, null сканирование

 # Закрыт или фильтруется
  - классифицируется через ip, id, idl сканированими 
---------------------------------------------------
 Discovery - Активные хосты с открытыми портами 
 1) Хост в рабочем состоянии 
 2) Работающие службы на хосте

nmap 192.168.0.1-5 -v
 # без опций
 	+ICMP echo request(ping)
 	+TCP SYN packet to port 443
 	+TCP ACK packet to port 80
 	+ICMP timestamp request 
 # Exceptions ARP for IPV4 and IPV6 local eth-network

nmap www.google.com -v 
	+PING сканирование т.к. домен находится не в локальной сети
	+INIT PARALLEL DNS resolution
----------------------------------------------------
Сканирование с целью составления списка
  -sL # по сути никакого сканирования не будет выполнено
	по умолчанию nmap будет осуществлять обратное разрешение DNS
	с целью определить имена хостов(ip) (DNS) (наименьший уровень вторжения) 
	from 85.23.45.21 to www.hello.com
nmap -sL facebook.com 
nmap -iR 300 -sL -vv

  -sn # PING сканирование, порты не сканируются, а выводится
  лишь список доступных хостов (больший уровень вторжения)
nmap 192.168.0.1/24 -sn

  -Pn # расценивать все хосты как работающие
   (пропускать этап обнаружения хоста)
nmap 192.168.0.1-5 -Pn -v
-------------------------------------------------------------------------
  -PS|PA|PU|PY # TCP SYN-ACK, UDP or SCTP сканирование УКАЗАННЫХ портов
  обнаружение по заданым портам включая порты по умолчанию 
  -PS + -sn # взаимоисключающие флаги, при такой инструкции
  указанные порты не будут просканированы
   nmap -iR 10 -PS22-25,80,113,1050,3500 -sn -v

  -PS[port,..,] # SYN ping по этой опции отправляется пустой syn package
  с флагом (SYN) проверяемый порт по умолчанию 80 reset syn-ack ответ
  сообщает о том, что хост активен 
nmap 192.168.0.1-5 -PS22-25,80,113,1050,3500 -v
  
  -PA[port,..,] # отправляет сразу ACK пакет и ждет ответа ESTABLISHED
  либо RST пакет
nmap 192.168.0.1-5 -PA22-25,80,113,1050,3500 -sn -v

  -PU[port,..,] # устанавливает udp соединение с указанным портом 
  UDP ping
nmap 192.168.0.1-5 -PU53 -v
--------------------------------------------------------------------------
   -PE|PP|PM # ICMP echo, timestamp, and netmask request - обнаружение
   с использованием запроса ICMP эхо, временной метки, сетевой маски 
   
   -PE # ICMP echo
nmap 192.168.0.1-255 -PE -sn -v

   -PO # ip ptocol Ping - default protocol 1.ICMP 2.IGMP 4IPvIP
nmap 192.168.0.1-254 -PO1,2,4 -sn 
   
   -PR # ARP сканирование 
nmap 192.168.0.1/24 -PR -sn -vv # применяется в локальных eth-сетях 

   --dns-server  # опция задания пользовательского DNS 
nmap 192.168.0.1-200 -sL --dns-server 192.168.0.1 
	выполнение обратного DNS сканирования с указанием 
	пользовательского DNS сервера
   --traceroute # показывет полный путь до указанного хоста
   начиная с локального шлюза до DNS сервера провайдера
nmap -iR 3 -sn --traceroute
---------------------------------------------------------------------------
RECEPTIONS SCAN PORT - этап сканирования портов 

	# TCP и SCTP сканирование можно одновременно использовать 
	с UDP сканированием
	-sS/sT/sA/sW/sM # TCP SYN,Connect(),ACK,Window,Maimon scans

	-sS # сырое TCP сканирование syn
nmap 192.168.0.143 -sS -v # 	

	-sT # полное TCP сканирование connect()
nmap 192.168.0.143 -sT -v 

	-sU # UDP сканирование 
nmap 192.168.0.199 -sU -v # отправка udp пакетов popular udpp 53,161	
	
	-sU -SS # udp и tcp могут использоваться папаллельно друг другу
nmap 192.168.0.1 -sS -v -sU 
 	 # UDP сканирование работает путем отправки UDP пакета
	 на каждый целевой порт, для некоторых популярных портов 
	 такик как 53,161 отправляется определенный -->

	-> PAYLOAD(для увеличения быстроты отклика), а для болшинства портов
	 отправляется пустой UDP пакет, службы отвечаеют UDP пакетом
	 подтверждая, что порт открыт

	EXAMPLE 1: отправлен пустой UDP пакет, служба ответила UDP пакетом
	 - 137/udp	open -< пришел ответ 
	 - 5353/udp	open -< пришел ответ 
	
	EXAMPLE 2: отправлен пустой UDP пакет, ответа нет
			   отправлен повторный UDP пакет, ответа нет
	 - 138/udp  open|filtred -< нет ответа после вторичной отправки
	 # возможна пакетная фильтрация -> 

	-> sV решение ^-V-^
	 -sU -v -sV опция для определения версии служб которая отправляет
	 больше данных на UDP порты

	--host-timeout 2m # некоторые закрытые UDP порты отправляют ICMP ошибку 
	недостижимости порта и ограничивают лимит ICMP сообщений о недостижимости
	порта, nmap обнаруживает ограничение по частоте отправки сообщений и
	замедляет частоту отправки пакетов, которые целевая машина в любом 
	случае будет сбрасывать. HOST TIMEOUT сбрасывает медленные хосты по 
	истечению указанного времени

	-sY/sZ # SCTP INIT/COOKIE ECHO протокол управления потоком 
	в основном используется службой SS7 и SIGTRAN в мобильных сетях
--------------------------------------------------------------------------
	-sA # ACK сканирование (отправляет пакет с флагом ACK)
	при ACK сканировании нельзя определить открыт ли порт, открыт либо
	фильтруется или закрыт. Используется для определения правил файрвола
	____FIREWALL RULES______
	В данном случае TCP ACK для определния:
	 - Запоминает ли FIREWALL состония 
	 - Какие порты фильтруются   
	В момент сканирования НЕФИЛЬТРУЕМЫХ систем:
	 - Открытые и закрытые порты возвращают RST пакет, NMAP помечает их
	 как NOFILTRED (они достижимы для ACK пакета)
	 - Порты, которые не отвечают или отправляюьт ОПРЕДЕЛЕННЫЕ icmp 
	 сообщения об ошиках (type 3 code 1,2,3,9,10,13) NMAP помечает их
	 как FILTRED
	 - При сканировани устройства перед которым используется фильотрующий
	 FIREWALL следует использовать ACK сканирование  
nmap 192.168.0.1 -v -sA
	
	-sW # Window сканирование (почти тоже самое, что ACK сканирование)
	за исключением того, что использует особенности реализации определенных
	систем для разделения портов на открытые и закрытые, вместо того, чтобы
	всегда при получении RST пакета выводить NOFILTRED. Путем анализа поля
	WINDOW в TCP заголовке возвращенного в ответ RST пакета 
nmap 192.168.0.1 -v -sW 
----------------------------------------------------------------------------
	-sN/sF/sX # TCP Null, FIN, Xmas scan, устанавливается определенный
	TCP флаг 
	- NULL не устанавливаются никакие биты, 0 флагов в TCP заголовке
	- FIN устанавливаются только TCP fin bits
	- XMASS устанавливаются fin, psh, urg 
	(раскрашивают пакет как рождественскую елку) 
	
	---> Используют незаметную лазейку в TCP RFC для разделения портов
	на закрытые и открытые, 
	ключевая особенность - потенциально могут обойти определенные 
	неучитывающие состояния FIREWALL и маршрутизаторы с пакетной фильтрацией 
nmap 192.168.0.1 -v sN # TCP null
	
	Maimon scans # работает точно также, только используется FIN ACK
	RST пакет должен быть сгенерирован в ответ на подобный запрос
	если порт закрыт или открыт. 
	P.S. многие PSD системы просто сбрасывае такие пакет если порт открыт
nmap 192.168.0.1 -v -sM 

	--scanflags <flags> # Установить пользовательский флаг TCP пакета

	-sI  # Зомби сканирование или ленивое сканирование
	при правильном выборе хоста появляется возможность сканировать 
	через ZOMBIE HOST (чужой хост) -> пакеты будут отправляться 
	с чужого хоста. Минус: Тяжело найти 
	TCP Idle SCAN (-sI)

	-sO # сканирование через IP protocol 
nmap 192.168.0.1 -sO # без указания опций выполняется  default scan

	-sO -p 1,2,3,4,5,6,17 # указываются нужные ip протоколы при сканировании  
nmap 192.168.0.1 -sO -p 1,2,3,4,5,6,17

	-b # FTP relay host, ftp bounce scan. Сканирование с проходом по FTP
	используется особенность протокола: 
	FTP RFS 959 (поддержка прокси-ftp-соединений )
----------------------------------------------------------------------
METHOD FOR CHOOSE PORT, NMAP TEHCNICAL 

	-p <port ranges> : Only scan specifed ports
nmap 192.168.0.1 -p 21-1000 : Сканирование диапазона с 21 по 1000	 
	
	-p U:ranges,number,T:ranges,number -sU -sS 
		# together scan with UDP and TCP 
nmap 192.168.0.1 -v -p U:53,111,137,5353,T:21-25,80,139,8080 -sU -sS

	-p U:ranges,number -sU # custom port with udp scan 
nmap 192.168.0.1 -v -p U:53,111,137,5353 -sU 

	-p T:ranges,number -sS # custom port with tcp scan 
nmap 192.168.0.1 -v -p T:21-25,80,139,8080 -sS

	-p S:ranges,number -sY # custom port with sctp scan 
nmap host -v -p S:9 -sY

	-p- -sU # scan all 65535 UDP ports
nmap 192.168.0.1 -p- -v -sU 

	-p- -sS # scan all 65535 TCP ports  
nmap 192.168.0.1 -p- -v -sS

	-p name of service # search ports by services name
nmap 192.168.0.1 -v -p http,https,ftp,etc,...
	# nmap will look for ports of the specifed services 
	# nmap будет искать все возможные порты 
	на которой может работать указанная служба, используя
	список портов из своей базы
	
	-F # fast scanning # режим быстрого сканирования
nmap 192.168.0.1 -v -F # производится сканирование по сотни (100)
	наиболее популярных портов 

	-p[NUM0]-[NUM1] # будет просканирован диапазон портов с NUM0 по NUM1
	MIN NUM0 = 0 and MAX NUM1 = 1

	EXAMPLES: 
	-p-65535 # будут просканированы порты с 1 по 65535
nmap 192.168.0.1 -p-65535 -v


	-p0- # будут просканированы порты с 1 по 65535
nmap host -p0- -v 

	-p0-1000 # будут просканированы порты с 1 по 100
nmap 192.168.0.1 -p0-100 -v  

	-p12-14 # будут просканированы порты с 12 по 14
nmap host -p12-14-

	--top-ports [num] # сканирование n популярных портов 
nmap host --top-ports 2000 # сканирование 2000 популярных портов

	--top-ports [num] --exclude-ports ranges,num,etc,...
	# сканирование n популярных портов исключая ranges, num порты 
nmap host --top-ports 2000 --exclude-ports 80,21,5353,139-9000

	--top-ports -r # по умолчанию скарование портов происходит в случайном
	порядке во избежание обнаружения, опция -r включает режим 
	don't randomize и порты сканируются последовательно
nmap host --top-ports 2000 -r -v  

	--port-ratio <ratio> # Сканировать порты с более популярным рейтингом 
---------------------------------------------------------------------------
